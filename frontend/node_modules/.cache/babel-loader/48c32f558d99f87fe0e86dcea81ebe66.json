{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shaqnewell/Documents/GitHub/GA-table/frontend/src/Components/table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport TableRow from \"./tableRow\";\nimport \"./table.scss\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Table = props => {\n  _s();\n\n  const {\n    propertyData\n  } = props;\n  const [selectedPage, setSelectedPage] = useState(1);\n  const pageSize = 10;\n  const pageLimit = Math.ceil(propertyData.length / pageSize);\n\n  const pageCounter = () => {\n    let arr = [];\n\n    for (let pageNumber = 1; pageNumber < pageLimit; pageNumber++) {\n      arr.push(pageNumber);\n    }\n\n    return arr;\n  }; // console.log(\"Data: \", propertyData.slice(0, 29))\n\n\n  let pageArray = pageCounter();\n\n  const paginate = pageNumber => {\n    return propertyData.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\n  };\n\n  const changePage = increment => {\n    setSelectedPage(selectedPage + increment);\n  };\n\n  const selectPage = event => {\n    setSelectedPage(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageButtons\",\n      \"data-testid\": \"page-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"pageButtons__previous\",\n        variant: \"dark\",\n        \"data-testid\": \"previous-page-button\",\n        disabled: selectedPage === 1,\n        onClick: () => {\n          changePage(-1);\n        },\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"pageButtons__indicator\",\n        \"data-testid\": \"page-number\",\n        value: selectedPage,\n        onChange: selectPage,\n        children: pageArray.map(pageNumber => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageNumber,\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"pageButtons__next\",\n        variant: \"dark\",\n        \"data-testid\": \"next-page-button\",\n        disabled: selectedPage === pageLimit,\n        onClick: () => {\n          changePage(1);\n        },\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"propertyTable\",\n      \"data-testid\": \"property-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"propertyTable__head\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyTable__head_id tableHeading\",\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyTable__head_outcode tableHeading\",\n          children: \"Outcode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyTable__head_street tableHeading\",\n          children: \"Street\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyTable__head_transactions tableHeading\",\n          children: \"Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), paginate(selectedPage).map(property => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"propertyTable__row\",\n          \"data-testid\": \"property-table-row\",\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            property: property\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, property.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Table, \"PfC+hPu/tYotVo+WBck+9nO43LM=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/Users/shaqnewell/Documents/GitHub/GA-table/frontend/src/Components/table.js"],"names":["React","useEffect","useState","TableRow","Button","Table","props","propertyData","selectedPage","setSelectedPage","pageSize","pageLimit","Math","ceil","length","pageCounter","arr","pageNumber","push","pageArray","paginate","slice","changePage","increment","selectPage","event","target","value","map","property","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TableRow from \"./tableRow\";\nimport \"./table.scss\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Table = (props) => {\n  const { propertyData } = props;\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const pageSize = 10;\n  const pageLimit = Math.ceil(propertyData.length / pageSize);\n\n  const pageCounter = () => {\n    let arr = []\n    for(let pageNumber = 1; pageNumber < pageLimit; pageNumber++){\n      arr.push(pageNumber)\n    }\n    return arr\n  }\n  \n  // console.log(\"Data: \", propertyData.slice(0, 29))\n\n  let pageArray = pageCounter()\n\n  const paginate = (pageNumber) => {\n    return propertyData.slice(\n      (pageNumber - 1) * pageSize,\n      pageNumber * pageSize\n    );\n  };\n\n  const changePage = (increment) => {\n    setSelectedPage(selectedPage + increment);\n  };\n\n  const selectPage = (event)=> {\n    setSelectedPage(event.target.value)\n  }\n\n  return (\n    <>\n      <div className=\"pageButtons\" data-testid=\"page-buttons\">\n        <Button\n          className=\"pageButtons__previous\"\n          variant=\"dark\"\n          data-testid=\"previous-page-button\"\n          disabled={selectedPage === 1}\n          onClick={() => {\n            changePage(-1);\n          }}\n        >\n          Previous page\n        </Button>\n        <select className=\"pageButtons__indicator\" data-testid=\"page-number\" value={selectedPage} onChange={selectPage}>\n          {pageArray.map((pageNumber) => (\n              <option key={pageNumber} value={pageNumber}>{pageNumber}</option>\n          ))}\n        </select>\n        <Button\n          className=\"pageButtons__next\"\n          variant=\"dark\"\n          data-testid=\"next-page-button\"\n          disabled={selectedPage === pageLimit}\n          onClick={() => {\n            changePage(1);\n          }}\n        >\n          Next page\n        </Button>\n      </div>\n      <div className=\"propertyTable\" data-testid=\"property-table\">\n        <div className=\"propertyTable__head\">\n          <div className=\"propertyTable__head_id tableHeading\">ID</div>\n          <div className=\"propertyTable__head_outcode tableHeading\">\n            Outcode\n          </div>\n          <div className=\"propertyTable__head_street tableHeading\">Street</div>\n          <div className=\"propertyTable__head_transactions tableHeading\">\n            Transactions\n          </div>\n        </div>\n        {paginate(selectedPage).map((property) => {\n          return (\n            <div\n              key={property.id}\n              className=\"propertyTable__row\"\n              data-testid=\"property-table-row\"\n            >\n              <TableRow property={property} />\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}